# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
require './lib/grandprix'

RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'
end

RSpec::Matchers.define :be_an_ordering_of do |edges|
  def mismatches(edges, actual_seq)
    edges.select do |e|
      j, k = e
      actual_seq.find_index(j) > actual_seq.find_index(k)
    end
  end

  def missing_vertices(edges, actual_seq)
    edges.flatten.uniq - actual_seq
  end

  match do |actual_seq|
    missing_vertices(edges, actual_seq).empty? && mismatches(edges, actual_seq).empty?
  end
  failure_message_for_should do |actual_seq|
    if missing_vertices(edges, actual_seq)
      "#{actual_seq} is missing these edges: #{missing_vertices(edges, actual_seq)}" 
    else
      <<-END
"#{actual_seq}" is not an ordering, as these pairs are inverted:
\t#{mismatches(edges, actual_seq).map(&:inspect).join("\n\t")}
END
    end
  end
end


